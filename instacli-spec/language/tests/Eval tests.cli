Test case: Evaluate a command inside data

Output:
  :Size: four

Expected output: 4

---
Test case: Evaluate an array

Output:
  - :Size: one
  - :Size: two
  - :Size: three

Expected output:
  - 3
  - 3
  - 5

---
Test case: Evaluate a nested command

Output:
  Size:
    :Size:
      - 1
      - 2
      - 3

Expected output:
  Size: 3

---
Test case: Evaluate a command nested in another command

Output:
  :Size:
    :Output:
      - 1
      - 2
      - 3

Expected output: 3

---
Test case: Eval in conditions

If:
  item: 5
  equals:
    :Size: three
  then:
    Output: Correct eval
  else:
    Output: Not supposed to get here

Expected output: Correct eval

---
Test case: No eager eval

${state}: clean

If:
  item: ${state}
  equals: clean
  then:
    Output: State was clean
    Print:
      :${state}: dirty
  else:
    Output: State was not clean

Expected output: State was clean
Assert equals:
  actual: ${state}
  expected: dirty

