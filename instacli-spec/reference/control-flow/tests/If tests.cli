Test case: Simple if with equals

If:
  item: a value
  equals: a value
  then:
    Output: Match

Expected output: Match

---
Test case: Simple if with 'in'

If:
  item: chocolate
  in:
    - milk
    - chocolate
    - cookies
  then:
    ${chocolate}: Found

Assert that:
  - item: ${chocolate}
    equals: Found

---
Test case: Substring matching with 'in'

If:
  item: cola
  in: chocolate
  then:
    ${cola}: Found

Assert that:
  - item: ${cola}
    equals: Found

---
Test case: If with and / or

If:
  all:
    - item: a value
      equals: a value
    - any:
        - item: selection
          equals: nothing
        - item: selection
          equals: selection
  then:
    Output: Any Match

Expected output: Any Match

---
Test case: If matching each item; no break

If:
  - item: one
    equals: one
    then:
      ${one}: 1

  - item: two
    equals: two
    then:
      ${two}: 2

Assert equals:
  - actual:
      - ${one}
      - ${two}
    expected:
      - 1
      - 2

---
Test case: If returns the result of then

If:
  - item: one
    equals: one
    then:
      Output: 1

  - item: two
    equals: two
    then:
      Output: 2

Expected output:
  - 1
  - 2

---
Test case: Switch-like if; break after successful match

When:
  - item: a value
    equals: a value
    then:
      Output: First match

  - item: another value
    in: another value
    then:
      Output: Second match

Expected output: First match

---
Test case: Variable resolution in nested Do

${output}: one

If:
  item: something
  equals: something
  then:
    Do:
      - ${output}: two
      - ${var}: ${output}

Assert equals:
  - actual: ${var}
    expected: two


---
Test case: Test against an empty list

If:
  item: [ ]
  equals: [ ]
  then:
    Output: Success

Expected output: Success

---
Test case: Not

Output: Failure

If:
  not:
    item: true
    equals: false
  then:
    Output: Success

Expected output: Success

---
Test case: Empty list

Output: [ ]

If:
  empty: ${output}
  then:
    Output: empty list detected

Expected output: empty list detected

---
Test case: Empty object

Output: { }

If:
  empty: ${output}
  then:
    Output: empty object detected

Expected output: empty object detected

---
Test case: Empty string

Output: ""

If:
  empty: ${output}
  then:
    Output: empty string detected

Expected output: empty string detected
