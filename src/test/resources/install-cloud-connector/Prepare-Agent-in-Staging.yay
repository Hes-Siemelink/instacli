# Ask where Release is running
Check Input:
  host: Release URL
  token: Access token for Remote Runner

---
# Log in to Platform API
Get token:
  endpoint: ${digitalaiStaging}
Http endpoint: ${output}

---
# Get available runtimes
Http GET: /workload/v1/agent_runtimes?filter=name:remote-runner-0.1.35

---
For each:
  ${agent}: ${output.agent_runtimes}
  Output: ${agent.name}
Print as YAML: ${output}

#---
## Format runtimes for User Input
## 'For each' collects returns all outputs as a list, so you can do a list comprehension
#For each:
#  ${runtime}: ${output.agent_runtimes}
#  Output:
#    name: ${runtime.name}
#    value: ${runtime.id}
#As: runtimes
#
#---
## Let user select runtime interactively
#User Input:
#  type: checkbox
#  message: Select runtime to add
#  choices: ${runtimes}
#As: runtime_ids
#
#---
## Register agent
#Http POST:
#  path: /workload/v1/agent_instances/
#  body:
#    agent_id: ${runtime_ids[0]}
#    alias: RemoteRunner
#    description: Remote Runner for Digital.ai Release on ${host}
#    variables:
#      RELEASE_URL: ${host}
#      RUNNER_REGISTRATION_TOKEN: ${token}
#      RUNNER_VOLUME_BASE_HOST_PATH: "/.dai-agent-storage"
#
#---
## Display the ID of the agent that was just created
#Print: "Added agent ${alias} with runtime id: ${runtime_ids[0]}"
